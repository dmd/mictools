#!/usr/bin/env python

import sys
import os
from os.path import join as pjoin
from pathlib import Path
from pwd import getpwnam
from grp import getgrnam


def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)


def _chown(path, uid, gid):
    os.chown(path, uid, gid)
    for root, dirs, files in os.walk(path):
        for _ in dirs:
            os.chown(os.path.join(root, _), uid, gid)
        for _ in files:
            os.chown(os.path.join(root, _), uid, gid)


studydir = sys.argv[1]
DICOMIN = "/data/ddrucker/dicomin"
REGISTRY_FILE = pjoin("/data/ddrucker/dicomin", "registry.txt")
owner = None

if Path(DICOMIN) not in Path(studydir).resolve().parents:
    eprint(f"STUDYDIR {studydir} needs to be within DICOMIN {DICOMIN}")
    sys.exit(1)

WHOSE_FILE = pjoin(studydir, "WHOSE_DATA_IS_THIS")
if not os.path.exists(WHOSE_FILE):
    eprint("WHOSE_DATA_IS_THIS file does not exist")
    sys.exit(1)

studydescription = open(WHOSE_FILE).read().rstrip()

with open(REGISTRY_FILE) as f:
    for line in f:
        sd, o, g = line.rstrip().split()
        if sd == studydescription:
            owner, group = o, g
            break

if owner:
    print(owner)
    _chown(studydir, getpwnam(owner).pw_uid, getgrnam(group).gr_gid)
    os.unlink(WHOSE_FILE)
else:
    print("not found")
